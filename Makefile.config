# For a faster library, set these debug flags to 0 and recompile all.
#
# ZMW_DEBUG_NAME allows some checking in "zmw_name.c"
# if it is disabled here, it is not enablable interactively
#
# ZMW_DEBUG_ASSERT is true, the assertion system is enabled
#
# ZMW_DEBUG_STORE_WIDGET_TYPE allows to have leaner executable
# but you lose much information when web browsing the widget tree.
#
ZMW_DEBUG=-DZMW_DEBUG_NAME=1 \
          -DZMW_DEBUG_ASSERT=1 \
          -DZMW_DEBUG_STORE_WIDGET_TYPE=1


ZMW_VERSION=0.0.3

# To use GTK1
ZMW_CFLAGS=`gtk-config --cflags` `gdk-pixbuf-config --cflags`
ZMW_LIBS=`gtk-config --libs` `gdk-pixbuf-config --libs`
# To use GTK2
ZMW_CFLAGS=`pkg-config gdk-2.0 --cflags` # -DGDK_DISABLE_DEPRECATED=1
ZMW_LIBS=`pkg-config gdk-2.0 --libs`








ZMW_ROOT=`ZMWP=$$(pwd) ; while [ ! -d $$ZMWP/kernel ] ; do ZMWP=$$(dirname $$ZMWP) ; done ; echo -n $$ZMWP`
ZMW_INCLUDES=$(ZMW_CFLAGS) -I$(ZMW_ROOT)/include
CFLAGS=-Wall -g $(ZMW_INCLUDES) $(ZMW_DEBUG) -shared
ZMW_OBJS=$(ZMW_ROOT)/zmw.so $(ZMW_LIBS)
ZMW_XVFBN=9
ZMW_XVFB=`hostname`:$(ZMW_XVFBN).0

ZMW_FOR=for I in */. ; do if [ "$$I" != "*/." -a -f "$$I/Makefile" ] ; then ( cd $$I ; $(MAKE) $@ ) ; else true ; fi ; done

ZMW_LINK=zmwlink() { echo "Linking $@" ; $(CC) $$* $(ZMW_OBJS) -o $@ ; } ; zmwlink


.SILENT:

.c.o:
	echo "Compiling $*.o"
	$(CC) -c $(CFLAGS) $*.c -o $*.o
	touch xxx.changed

dep::
	echo "Makedepend `pwd`"
	makedepend $(ZMW_INCLUDES) *.c 2>/dev/null
	$(ZMW_FOR)

clean::
	echo "Clean `pwd`"
	rm -f *.o *~ *.bak *.a gmon.out TAGS tags xxx* xvfb.pid 2>/dev/null
	rm -rf .xvpics 2>/dev/null
	$(ZMW_FOR)

lib test exe doc::
	echo "Make $@ `pwd`"
	$(ZMW_FOR)
