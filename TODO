
Many things are missing in the current library.
The ones with a "*" are priorities.

WIDGETS:
	- Alignement left/right in an horizontal widget
	- Text Cursor
	- Text selection, cut, copy, paste
	- Focus navigation
	- Framing (border + name)
	- Table

LIBRARY CORE:
	- Make a pile by attribute with a bit vector to indicate
	  which attributes where pushed (as it is yet done with GC's)
	  So in the most current case, there only one 'int' to push
	  to push all the attributes.
	  Define the attributes in current state dynamicly
	- Double buffering
	- zMw->size[0].alignement zMw->size[0].required for X axis ...
	  and [1] for Y axis.
	- Rename bad name of function or structure
	- Use OpenGL

LIBRARY CORE naming function (zmw_name.c)
	- zmw_name must not be called with the same name for sibling.

BUGS:
	* X window is locked (grab?) when debugging info is printed
	* The zmw_window change GC before they were pushed
	  (the tip changes the color of the next widget)
	- Key pressed have not the current coordinates, but the last
	  one received.
	- A detached menu is invisible if its father is not visible
	  (can be corrected without problems)
	- A window in an invisible notebook page is not visible

PROBLEMS:
	- Some function call must be followed by exactly one widget
		zmw_window_is_popped
		zmw_tip_visible
		zmw_drag_from_state
	  If the returned value change the number of following widget change.
	  If the user doesn't use "widget_name" the name of the widget change.
	  Actualy these functions modify the widget name in order
	  to trick ZMW to think the number of widget et widget name
	  have not changed.
	  This scheme doesn't work in all the case, see the test of tips.
	  So we must turn around this problem in some other way:
		- Create a widget type "transient"
		- or create a state : next widget is transient
		- or enhance the naming scheme with transient name (/Transient)
		- ...
	  The good way to solve this problem is not clear,
	  So the small bug stay. Its correction must
	  not imply a user program modification.
