
/* This file is automaticaly generated by the script zmw-generate.py
 * DO NOT EDIT
*/

extern Zmw zmw ;
#define zmw_action_get() (zmw.ptr->i.action)
#define zmw_action_get_ptr() (&zmw.ptr->i.action)
#define zmw_action_set(X) (zmw.ptr->i.action = (X))
#define zmw_parent__action_get() ((zmw.ptr-1)->i.action)
#define zmw_parent__action_get_ptr() (&(zmw.ptr-1)->i.action)
#define zmw_parent__action_set(X) ((zmw.ptr-1)->i.action = (X))
#define zmw_debug_get() (zmw.ptr->i.debug)
#define zmw_debug_get_ptr() (&zmw.ptr->i.debug)
#define zmw_debug_set(X) (zmw.ptr->i.debug = (X))
#define zmw_parent__debug_get() ((zmw.ptr-1)->i.debug)
#define zmw_parent__debug_get_ptr() (&(zmw.ptr-1)->i.debug)
#define zmw_parent__debug_set(X) ((zmw.ptr-1)->i.debug = (X))
#define zmw_colors_get() (zmw.ptr->i.colors)
#define zmw_parent__colors_get() ((zmw.ptr-1)->i.colors)
#define zmw_font_family_get() (zmw.ptr->i.font.family)
#define zmw_font_family_get_ptr() (&zmw.ptr->i.font.family)
#define zmw_font_family_set(X) (zmw.ptr->i.font.family = (X))
#define zmw_parent__font_family_get() ((zmw.ptr-1)->i.font.family)
#define zmw_parent__font_family_get_ptr() (&(zmw.ptr-1)->i.font.family)
#define zmw_parent__font_family_set(X) ((zmw.ptr-1)->i.font.family = (X))
#define zmw_font_size_get() (zmw.ptr->i.font.size)
#define zmw_font_size_get_ptr() (&zmw.ptr->i.font.size)
#define zmw_font_size_set(X) (zmw.ptr->i.font.size = (X))
#define zmw_parent__font_size_get() ((zmw.ptr-1)->i.font.size)
#define zmw_parent__font_size_get_ptr() (&(zmw.ptr-1)->i.font.size)
#define zmw_parent__font_size_set(X) ((zmw.ptr-1)->i.font.size = (X))
#define zmw_font_weight_get() (zmw.ptr->i.font.weight)
#define zmw_font_weight_get_ptr() (&zmw.ptr->i.font.weight)
#define zmw_font_weight_set(X) (zmw.ptr->i.font.weight = (X))
#define zmw_parent__font_weight_get() ((zmw.ptr-1)->i.font.weight)
#define zmw_parent__font_weight_get_ptr() (&(zmw.ptr-1)->i.font.weight)
#define zmw_parent__font_weight_set(X) ((zmw.ptr-1)->i.font.weight = (X))
#define zmw_font_style_get() (zmw.ptr->i.font.style)
#define zmw_font_style_get_ptr() (&zmw.ptr->i.font.style)
#define zmw_font_style_set(X) (zmw.ptr->i.font.style = (X))
#define zmw_parent__font_style_get() ((zmw.ptr-1)->i.font.style)
#define zmw_parent__font_style_get_ptr() (&(zmw.ptr-1)->i.font.style)
#define zmw_parent__font_style_set(X) ((zmw.ptr-1)->i.font.style = (X))
#define zmw_font_get() (&zmw.ptr->i.font)
#define zmw_font_set(X) (zmw.ptr->i.font = *(X))
#define zmw_parent__font_get() (&(zmw.ptr-1)->i.font)
#define zmw_parent__font_set(X) ((zmw.ptr-1)->i.font = *(X))
#define zmw_focus_value_get() (zmw.ptr->i.focus->value)
#define zmw_focus_value_get_ptr() (&zmw.ptr->i.focus->value)
#define zmw_focus_value_set(X) (zmw.ptr->i.focus->value = (X))
#define zmw_parent__focus_value_get() ((zmw.ptr-1)->i.focus->value)
#define zmw_parent__focus_value_get_ptr() (&(zmw.ptr-1)->i.focus->value)
#define zmw_parent__focus_value_set(X) ((zmw.ptr-1)->i.focus->value = (X))
#define zmw_focus_get() (zmw.ptr->i.focus)
#define zmw_focus_get_ptr() (&zmw.ptr->i.focus)
#define zmw_focus_set(X) (zmw.ptr->i.focus = (X))
#define zmw_parent__focus_get() ((zmw.ptr-1)->i.focus)
#define zmw_parent__focus_get_ptr() (&(zmw.ptr-1)->i.focus)
#define zmw_parent__focus_set(X) ((zmw.ptr-1)->i.focus = (X))
#define zmw_border_width_get() (zmw.ptr->i.border_width)
#define zmw_border_width_get_ptr() (&zmw.ptr->i.border_width)
#define zmw_border_width_set(X) (zmw.ptr->i.border_width = (X))
#define zmw_parent__border_width_get() ((zmw.ptr-1)->i.border_width)
#define zmw_parent__border_width_get_ptr() (&(zmw.ptr-1)->i.border_width)
#define zmw_parent__border_width_set(X) ((zmw.ptr-1)->i.border_width = (X))
#define zmw_focus_width_get() (zmw.ptr->i.focus_width)
#define zmw_focus_width_get_ptr() (&zmw.ptr->i.focus_width)
#define zmw_focus_width_set(X) (zmw.ptr->i.focus_width = (X))
#define zmw_parent__focus_width_get() ((zmw.ptr-1)->i.focus_width)
#define zmw_parent__focus_width_get_ptr() (&(zmw.ptr-1)->i.focus_width)
#define zmw_parent__focus_width_set(X) ((zmw.ptr-1)->i.focus_width = (X))
#define zmw_auto_resize_get() (zmw.ptr->i.auto_resize)
#define zmw_auto_resize_set(X) (zmw.ptr->i.auto_resize = (X))
#define zmw_parent__auto_resize_get() ((zmw.ptr-1)->i.auto_resize)
#define zmw_parent__auto_resize_set(X) ((zmw.ptr-1)->i.auto_resize = (X))
#define zmw_sensitive_get() (zmw.ptr->i.sensitive)
#define zmw_sensitive_set(X) (zmw.ptr->i.sensitive = (X))
#define zmw_parent__sensitive_get() ((zmw.ptr-1)->i.sensitive)
#define zmw_parent__sensitive_set(X) ((zmw.ptr-1)->i.sensitive = (X))
#define zmw_call_number_get() (zmw.ptr->u.call_number)
#define zmw_call_number_get_ptr() (&zmw.ptr->u.call_number)
#define zmw_call_number_set(X) (zmw.ptr->u.call_number = (X))
#define zmw_parent__call_number_get() ((zmw.ptr-1)->u.call_number)
#define zmw_parent__call_number_get_ptr() (&(zmw.ptr-1)->u.call_number)
#define zmw_parent__call_number_set(X) ((zmw.ptr-1)->u.call_number = (X))
#define zmw_name_get() (zmw.ptr->u.name)
#define zmw_name_get_ptr() (&zmw.ptr->u.name)
#define zmw_name_set(X) (zmw.ptr->u.name = (X))
#define zmw_parent__name_get() ((zmw.ptr-1)->u.name)
#define zmw_parent__name_get_ptr() (&(zmw.ptr-1)->u.name)
#define zmw_parent__name_set(X) ((zmw.ptr-1)->u.name = (X))
#define zmw_name_index_get() (zmw.ptr->u.name_index)
#define zmw_name_index_get_ptr() (&zmw.ptr->u.name_index)
#define zmw_name_index_set(X) (zmw.ptr->u.name_index = (X))
#define zmw_parent__name_index_get() ((zmw.ptr-1)->u.name_index)
#define zmw_parent__name_index_get_ptr() (&(zmw.ptr-1)->u.name_index)
#define zmw_parent__name_index_set(X) ((zmw.ptr-1)->u.name_index = (X))
#define zmw_name_separator_get() (zmw.ptr->u.name_separator)
#define zmw_name_separator_get_ptr() (&zmw.ptr->u.name_separator)
#define zmw_name_separator_set(X) (zmw.ptr->u.name_separator = (X))
#define zmw_parent__name_separator_get() ((zmw.ptr-1)->u.name_separator)
#define zmw_parent__name_separator_get_ptr() (&(zmw.ptr-1)->u.name_separator)
#define zmw_parent__name_separator_set(X) ((zmw.ptr-1)->u.name_separator = (X))
#define zmw_nb_of_children_get() (zmw.ptr->u.nb_of_children)
#define zmw_nb_of_children_get_ptr() (&zmw.ptr->u.nb_of_children)
#define zmw_nb_of_children_set(X) (zmw.ptr->u.nb_of_children = (X))
#define zmw_parent__nb_of_children_get() ((zmw.ptr-1)->u.nb_of_children)
#define zmw_parent__nb_of_children_get_ptr() (&(zmw.ptr-1)->u.nb_of_children)
#define zmw_parent__nb_of_children_set(X) ((zmw.ptr-1)->u.nb_of_children = (X))
#define zmw_nb_of_children_max_get() (zmw.ptr->u.nb_of_children_max)
#define zmw_nb_of_children_max_get_ptr() (&zmw.ptr->u.nb_of_children_max)
#define zmw_nb_of_children_max_set(X) (zmw.ptr->u.nb_of_children_max = (X))
#define zmw_parent__nb_of_children_max_get() ((zmw.ptr-1)->u.nb_of_children_max)
#define zmw_parent__nb_of_children_max_get_ptr() (&(zmw.ptr-1)->u.nb_of_children_max)
#define zmw_parent__nb_of_children_max_set(X) ((zmw.ptr-1)->u.nb_of_children_max = (X))
#define zmw_children_get() (zmw.ptr->u.children)
#define zmw_children_get_ptr() (&zmw.ptr->u.children)
#define zmw_children_set(X) (zmw.ptr->u.children = (X))
#define zmw_parent__children_get() ((zmw.ptr-1)->u.children)
#define zmw_parent__children_get_ptr() (&(zmw.ptr-1)->u.children)
#define zmw_parent__children_set(X) ((zmw.ptr-1)->u.children = (X))
#define zmw_do_not_execute_pop_get() (zmw.ptr->u.do_not_execute_pop)
#define zmw_do_not_execute_pop_set(X) (zmw.ptr->u.do_not_execute_pop = (X))
#define zmw_parent__do_not_execute_pop_get() ((zmw.ptr-1)->u.do_not_execute_pop)
#define zmw_parent__do_not_execute_pop_set(X) ((zmw.ptr-1)->u.do_not_execute_pop = (X))
#define zmw_external_state_get() (zmw.ptr->u.external_state)
#define zmw_external_state_get_ptr() (&zmw.ptr->u.external_state)
#define zmw_external_state_set(X) (zmw.ptr->u.external_state = (X))
#define zmw_parent__external_state_get() ((zmw.ptr-1)->u.external_state)
#define zmw_parent__external_state_get_ptr() (&(zmw.ptr-1)->u.external_state)
#define zmw_parent__external_state_set(X) ((zmw.ptr-1)->u.external_state = (X))
#define zmw_asked_width_get() (zmw.ptr->u.asked.width)
#define zmw_asked_width_get_ptr() (&zmw.ptr->u.asked.width)
#define zmw_asked_width_set(X) (zmw.ptr->u.asked.width = (X))
#define zmw_parent__asked_width_get() ((zmw.ptr-1)->u.asked.width)
#define zmw_parent__asked_width_get_ptr() (&(zmw.ptr-1)->u.asked.width)
#define zmw_parent__asked_width_set(X) ((zmw.ptr-1)->u.asked.width = (X))
#define zmw_asked_height_get() (zmw.ptr->u.asked.height)
#define zmw_asked_height_get_ptr() (&zmw.ptr->u.asked.height)
#define zmw_asked_height_set(X) (zmw.ptr->u.asked.height = (X))
#define zmw_parent__asked_height_get() ((zmw.ptr-1)->u.asked.height)
#define zmw_parent__asked_height_get_ptr() (&(zmw.ptr-1)->u.asked.height)
#define zmw_parent__asked_height_set(X) ((zmw.ptr-1)->u.asked.height = (X))
#define zmw_asked_x_get() (zmw.ptr->u.asked.x)
#define zmw_asked_x_get_ptr() (&zmw.ptr->u.asked.x)
#define zmw_asked_x_set(X) (zmw.ptr->u.asked.x = (X))
#define zmw_parent__asked_x_get() ((zmw.ptr-1)->u.asked.x)
#define zmw_parent__asked_x_get_ptr() (&(zmw.ptr-1)->u.asked.x)
#define zmw_parent__asked_x_set(X) ((zmw.ptr-1)->u.asked.x = (X))
#define zmw_asked_y_get() (zmw.ptr->u.asked.y)
#define zmw_asked_y_get_ptr() (&zmw.ptr->u.asked.y)
#define zmw_asked_y_set(X) (zmw.ptr->u.asked.y = (X))
#define zmw_parent__asked_y_get() ((zmw.ptr-1)->u.asked.y)
#define zmw_parent__asked_y_get_ptr() (&(zmw.ptr-1)->u.asked.y)
#define zmw_parent__asked_y_set(X) ((zmw.ptr-1)->u.asked.y = (X))
#define zmw_asked_get() (&zmw.ptr->u.asked)
#define zmw_asked_set(X) (zmw.ptr->u.asked = *(X))
#define zmw_parent__asked_get() (&(zmw.ptr-1)->u.asked)
#define zmw_parent__asked_set(X) ((zmw.ptr-1)->u.asked = *(X))
#define zmw_type_get() (zmw.ptr->u.type)
#define zmw_type_get_ptr() (&zmw.ptr->u.type)
#define zmw_type_set(X) (zmw.ptr->u.type = (X))
#define zmw_parent__type_get() ((zmw.ptr-1)->u.type)
#define zmw_parent__type_get_ptr() (&(zmw.ptr-1)->u.type)
#define zmw_parent__type_set(X) ((zmw.ptr-1)->u.type = (X))
#define zmw_file_get() (zmw.ptr->u.file)
#define zmw_file_get_ptr() (&zmw.ptr->u.file)
#define zmw_file_set(X) (zmw.ptr->u.file = (X))
#define zmw_parent__file_get() ((zmw.ptr-1)->u.file)
#define zmw_parent__file_get_ptr() (&(zmw.ptr-1)->u.file)
#define zmw_parent__file_set(X) ((zmw.ptr-1)->u.file = (X))
#define zmw_line_get() (zmw.ptr->u.line)
#define zmw_line_get_ptr() (&zmw.ptr->u.line)
#define zmw_line_set(X) (zmw.ptr->u.line = (X))
#define zmw_parent__line_get() ((zmw.ptr-1)->u.line)
#define zmw_parent__line_get_ptr() (&(zmw.ptr-1)->u.line)
#define zmw_parent__line_set(X) ((zmw.ptr-1)->u.line = (X))
#define zmw_subaction_get() (zmw.ptr->u.subaction)
#define zmw_subaction_get_ptr() (&zmw.ptr->u.subaction)
#define zmw_subaction_set(X) (zmw.ptr->u.subaction = (X))
#define zmw_parent__subaction_get() ((zmw.ptr-1)->u.subaction)
#define zmw_parent__subaction_get_ptr() (&(zmw.ptr-1)->u.subaction)
#define zmw_parent__subaction_set(X) ((zmw.ptr-1)->u.subaction = (X))
#define zmw_menu_state_get() (zmw.ptr->u.menu_state)
#define zmw_menu_state_get_ptr() (&zmw.ptr->u.menu_state)
#define zmw_menu_state_set(X) (zmw.ptr->u.menu_state = (X))
#define zmw_parent__menu_state_get() ((zmw.ptr-1)->u.menu_state)
#define zmw_parent__menu_state_get_ptr() (&(zmw.ptr-1)->u.menu_state)
#define zmw_parent__menu_state_set(X) ((zmw.ptr-1)->u.menu_state = (X))
#define zmw_child_number_get() (zmw.ptr->u.child_number)
#define zmw_child_number_get_ptr() (&zmw.ptr->u.child_number)
#define zmw_child_number_set(X) (zmw.ptr->u.child_number = (X))
#define zmw_parent__child_number_get() ((zmw.ptr-1)->u.child_number)
#define zmw_parent__child_number_get_ptr() (&(zmw.ptr-1)->u.child_number)
#define zmw_parent__child_number_set(X) ((zmw.ptr-1)->u.child_number = (X))
#define zmw_window_get() (zmw.ptr->u.parent_to_child.window)
#define zmw_window_get_ptr() (&zmw.ptr->u.parent_to_child.window)
#define zmw_window_set(X) (zmw.ptr->u.parent_to_child.window = (X))
#define zmw_parent__window_get() ((zmw.ptr-1)->u.parent_to_child.window)
#define zmw_parent__window_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.window)
#define zmw_parent__window_set(X) ((zmw.ptr-1)->u.parent_to_child.window = (X))
#define zmw_gc_get() (zmw.ptr->u.parent_to_child.gc)
#define zmw_gc_get_ptr() (&zmw.ptr->u.parent_to_child.gc)
#define zmw_gc_set(X) (zmw.ptr->u.parent_to_child.gc = (X))
#define zmw_parent__gc_get() ((zmw.ptr-1)->u.parent_to_child.gc)
#define zmw_parent__gc_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.gc)
#define zmw_parent__gc_set(X) ((zmw.ptr-1)->u.parent_to_child.gc = (X))
#define zmw_clipping_x_get() (zmw.ptr->u.parent_to_child.clipping.x)
#define zmw_clipping_x_get_ptr() (&zmw.ptr->u.parent_to_child.clipping.x)
#define zmw_clipping_x_set(X) (zmw.ptr->u.parent_to_child.clipping.x = (X))
#define zmw_parent__clipping_x_get() ((zmw.ptr-1)->u.parent_to_child.clipping.x)
#define zmw_parent__clipping_x_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.clipping.x)
#define zmw_parent__clipping_x_set(X) ((zmw.ptr-1)->u.parent_to_child.clipping.x = (X))
#define zmw_clipping_y_get() (zmw.ptr->u.parent_to_child.clipping.y)
#define zmw_clipping_y_get_ptr() (&zmw.ptr->u.parent_to_child.clipping.y)
#define zmw_clipping_y_set(X) (zmw.ptr->u.parent_to_child.clipping.y = (X))
#define zmw_parent__clipping_y_get() ((zmw.ptr-1)->u.parent_to_child.clipping.y)
#define zmw_parent__clipping_y_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.clipping.y)
#define zmw_parent__clipping_y_set(X) ((zmw.ptr-1)->u.parent_to_child.clipping.y = (X))
#define zmw_clipping_width_get() (zmw.ptr->u.parent_to_child.clipping.width)
#define zmw_clipping_width_get_ptr() (&zmw.ptr->u.parent_to_child.clipping.width)
#define zmw_clipping_width_set(X) (zmw.ptr->u.parent_to_child.clipping.width = (X))
#define zmw_parent__clipping_width_get() ((zmw.ptr-1)->u.parent_to_child.clipping.width)
#define zmw_parent__clipping_width_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.clipping.width)
#define zmw_parent__clipping_width_set(X) ((zmw.ptr-1)->u.parent_to_child.clipping.width = (X))
#define zmw_clipping_height_get() (zmw.ptr->u.parent_to_child.clipping.height)
#define zmw_clipping_height_get_ptr() (&zmw.ptr->u.parent_to_child.clipping.height)
#define zmw_clipping_height_set(X) (zmw.ptr->u.parent_to_child.clipping.height = (X))
#define zmw_parent__clipping_height_get() ((zmw.ptr-1)->u.parent_to_child.clipping.height)
#define zmw_parent__clipping_height_get_ptr() (&(zmw.ptr-1)->u.parent_to_child.clipping.height)
#define zmw_parent__clipping_height_set(X) ((zmw.ptr-1)->u.parent_to_child.clipping.height = (X))
#define zmw_clipping_get() (&zmw.ptr->u.parent_to_child.clipping)
#define zmw_clipping_set(X) (zmw.ptr->u.parent_to_child.clipping = *(X))
#define zmw_parent__clipping_get() (&(zmw.ptr-1)->u.parent_to_child.clipping)
#define zmw_parent__clipping_set(X) ((zmw.ptr-1)->u.parent_to_child.clipping = *(X))
#define zmw_parent_to_child_get() (&zmw.ptr->u.parent_to_child)
#define zmw_parent_to_child_set(X) (zmw.ptr->u.parent_to_child = *(X))
#define zmw_parent__parent_to_child_get() (&(zmw.ptr-1)->u.parent_to_child)
#define zmw_parent__parent_to_child_set(X) ((zmw.ptr-1)->u.parent_to_child = *(X))
#define zmw_size_get() (zmw.ptr->u.size)
#define zmw_size_set(X) (*zmw.ptr->u.size = *(X))
#define zmw_parent__size_get() ((zmw.ptr-1)->u.size)
#define zmw_parent__size_set(X) (*(zmw.ptr-1)->u.size = *(X))
#define zmw_child__size_get(i) ((&zmw.ptr->u.children[i]))
#define zmw_child__size_set(i, X) (*(&zmw.ptr->u.children[i]) = *(X))
#define zmw_invisible_get() (zmw.ptr->u.size->invisible)
#define zmw_invisible_set(X) (zmw.ptr->u.size->invisible = (X))
#define zmw_parent__invisible_get() ((zmw.ptr-1)->u.size->invisible)
#define zmw_parent__invisible_set(X) ((zmw.ptr-1)->u.size->invisible = (X))
#define zmw_child__invisible_get(i) ((&zmw.ptr->u.children[i])->invisible)
#define zmw_child__invisible_set(i, X) ((&zmw.ptr->u.children[i])->invisible = (X))
#define zmw_sensitived_get() (zmw.ptr->u.size->sensitived)
#define zmw_sensitived_set(X) (zmw.ptr->u.size->sensitived = (X))
#define zmw_parent__sensitived_get() ((zmw.ptr-1)->u.size->sensitived)
#define zmw_parent__sensitived_set(X) ((zmw.ptr-1)->u.size->sensitived = (X))
#define zmw_child__sensitived_get(i) ((&zmw.ptr->u.children[i])->sensitived)
#define zmw_child__sensitived_set(i, X) ((&zmw.ptr->u.children[i])->sensitived = (X))
#define zmw_pass_through_get() (zmw.ptr->u.size->pass_through)
#define zmw_pass_through_set(X) (zmw.ptr->u.size->pass_through = (X))
#define zmw_parent__pass_through_get() ((zmw.ptr-1)->u.size->pass_through)
#define zmw_parent__pass_through_set(X) ((zmw.ptr-1)->u.size->pass_through = (X))
#define zmw_child__pass_through_get(i) ((&zmw.ptr->u.children[i])->pass_through)
#define zmw_child__pass_through_set(i, X) ((&zmw.ptr->u.children[i])->pass_through = (X))
#define zmw_event_in_rectangle_get() (zmw.ptr->u.size->event_in_rectangle)
#define zmw_event_in_rectangle_set(X) (zmw.ptr->u.size->event_in_rectangle = (X))
#define zmw_parent__event_in_rectangle_get() ((zmw.ptr-1)->u.size->event_in_rectangle)
#define zmw_parent__event_in_rectangle_set(X) ((zmw.ptr-1)->u.size->event_in_rectangle = (X))
#define zmw_child__event_in_rectangle_get(i) ((&zmw.ptr->u.children[i])->event_in_rectangle)
#define zmw_child__event_in_rectangle_set(i, X) ((&zmw.ptr->u.children[i])->event_in_rectangle = (X))
#define zmw_event_in_children_get() (zmw.ptr->u.size->event_in_children)
#define zmw_event_in_children_set(X) (zmw.ptr->u.size->event_in_children = (X))
#define zmw_parent__event_in_children_get() ((zmw.ptr-1)->u.size->event_in_children)
#define zmw_parent__event_in_children_set(X) ((zmw.ptr-1)->u.size->event_in_children = (X))
#define zmw_child__event_in_children_get(i) ((&zmw.ptr->u.children[i])->event_in_children)
#define zmw_child__event_in_children_set(i, X) ((&zmw.ptr->u.children[i])->event_in_children = (X))
#define zmw_allocated_x_get() (zmw.ptr->u.size->allocated.x)
#define zmw_allocated_x_get_ptr() (&zmw.ptr->u.size->allocated.x)
#define zmw_allocated_x_set(X) (zmw.ptr->u.size->allocated.x = (X))
#define zmw_parent__allocated_x_get() ((zmw.ptr-1)->u.size->allocated.x)
#define zmw_parent__allocated_x_get_ptr() (&(zmw.ptr-1)->u.size->allocated.x)
#define zmw_parent__allocated_x_set(X) ((zmw.ptr-1)->u.size->allocated.x = (X))
#define zmw_child__allocated_x_get(i) ((&zmw.ptr->u.children[i])->allocated.x)
#define zmw_child__allocated_x_get_ptr(i) (&(&zmw.ptr->u.children[i])->allocated.x)
#define zmw_child__allocated_x_set(i, X) ((&zmw.ptr->u.children[i])->allocated.x = (X))
#define zmw_allocated_y_get() (zmw.ptr->u.size->allocated.y)
#define zmw_allocated_y_get_ptr() (&zmw.ptr->u.size->allocated.y)
#define zmw_allocated_y_set(X) (zmw.ptr->u.size->allocated.y = (X))
#define zmw_parent__allocated_y_get() ((zmw.ptr-1)->u.size->allocated.y)
#define zmw_parent__allocated_y_get_ptr() (&(zmw.ptr-1)->u.size->allocated.y)
#define zmw_parent__allocated_y_set(X) ((zmw.ptr-1)->u.size->allocated.y = (X))
#define zmw_child__allocated_y_get(i) ((&zmw.ptr->u.children[i])->allocated.y)
#define zmw_child__allocated_y_get_ptr(i) (&(&zmw.ptr->u.children[i])->allocated.y)
#define zmw_child__allocated_y_set(i, X) ((&zmw.ptr->u.children[i])->allocated.y = (X))
#define zmw_allocated_width_get() (zmw.ptr->u.size->allocated.width)
#define zmw_allocated_width_get_ptr() (&zmw.ptr->u.size->allocated.width)
#define zmw_allocated_width_set(X) (zmw.ptr->u.size->allocated.width = (X))
#define zmw_parent__allocated_width_get() ((zmw.ptr-1)->u.size->allocated.width)
#define zmw_parent__allocated_width_get_ptr() (&(zmw.ptr-1)->u.size->allocated.width)
#define zmw_parent__allocated_width_set(X) ((zmw.ptr-1)->u.size->allocated.width = (X))
#define zmw_child__allocated_width_get(i) ((&zmw.ptr->u.children[i])->allocated.width)
#define zmw_child__allocated_width_get_ptr(i) (&(&zmw.ptr->u.children[i])->allocated.width)
#define zmw_child__allocated_width_set(i, X) ((&zmw.ptr->u.children[i])->allocated.width = (X))
#define zmw_allocated_height_get() (zmw.ptr->u.size->allocated.height)
#define zmw_allocated_height_get_ptr() (&zmw.ptr->u.size->allocated.height)
#define zmw_allocated_height_set(X) (zmw.ptr->u.size->allocated.height = (X))
#define zmw_parent__allocated_height_get() ((zmw.ptr-1)->u.size->allocated.height)
#define zmw_parent__allocated_height_get_ptr() (&(zmw.ptr-1)->u.size->allocated.height)
#define zmw_parent__allocated_height_set(X) ((zmw.ptr-1)->u.size->allocated.height = (X))
#define zmw_child__allocated_height_get(i) ((&zmw.ptr->u.children[i])->allocated.height)
#define zmw_child__allocated_height_get_ptr(i) (&(&zmw.ptr->u.children[i])->allocated.height)
#define zmw_child__allocated_height_set(i, X) ((&zmw.ptr->u.children[i])->allocated.height = (X))
#define zmw_allocated_get() (&zmw.ptr->u.size->allocated)
#define zmw_allocated_set(X) (zmw.ptr->u.size->allocated = *(X))
#define zmw_parent__allocated_get() (&(zmw.ptr-1)->u.size->allocated)
#define zmw_parent__allocated_set(X) ((zmw.ptr-1)->u.size->allocated = *(X))
#define zmw_child__allocated_get(i) (&(&zmw.ptr->u.children[i])->allocated)
#define zmw_child__allocated_set(i, X) ((&zmw.ptr->u.children[i])->allocated = *(X))
#define zmw_required_x_get() (zmw.ptr->u.size->required.x)
#define zmw_required_x_get_ptr() (&zmw.ptr->u.size->required.x)
#define zmw_required_x_set(X) (zmw.ptr->u.size->required.x = (X))
#define zmw_parent__required_x_get() ((zmw.ptr-1)->u.size->required.x)
#define zmw_parent__required_x_get_ptr() (&(zmw.ptr-1)->u.size->required.x)
#define zmw_parent__required_x_set(X) ((zmw.ptr-1)->u.size->required.x = (X))
#define zmw_child__required_x_get(i) ((&zmw.ptr->u.children[i])->required.x)
#define zmw_child__required_x_get_ptr(i) (&(&zmw.ptr->u.children[i])->required.x)
#define zmw_child__required_x_set(i, X) ((&zmw.ptr->u.children[i])->required.x = (X))
#define zmw_required_y_get() (zmw.ptr->u.size->required.y)
#define zmw_required_y_get_ptr() (&zmw.ptr->u.size->required.y)
#define zmw_required_y_set(X) (zmw.ptr->u.size->required.y = (X))
#define zmw_parent__required_y_get() ((zmw.ptr-1)->u.size->required.y)
#define zmw_parent__required_y_get_ptr() (&(zmw.ptr-1)->u.size->required.y)
#define zmw_parent__required_y_set(X) ((zmw.ptr-1)->u.size->required.y = (X))
#define zmw_child__required_y_get(i) ((&zmw.ptr->u.children[i])->required.y)
#define zmw_child__required_y_get_ptr(i) (&(&zmw.ptr->u.children[i])->required.y)
#define zmw_child__required_y_set(i, X) ((&zmw.ptr->u.children[i])->required.y = (X))
#define zmw_required_width_get() (zmw.ptr->u.size->required.width)
#define zmw_required_width_get_ptr() (&zmw.ptr->u.size->required.width)
#define zmw_required_width_set(X) (zmw.ptr->u.size->required.width = (X))
#define zmw_parent__required_width_get() ((zmw.ptr-1)->u.size->required.width)
#define zmw_parent__required_width_get_ptr() (&(zmw.ptr-1)->u.size->required.width)
#define zmw_parent__required_width_set(X) ((zmw.ptr-1)->u.size->required.width = (X))
#define zmw_child__required_width_get(i) ((&zmw.ptr->u.children[i])->required.width)
#define zmw_child__required_width_get_ptr(i) (&(&zmw.ptr->u.children[i])->required.width)
#define zmw_child__required_width_set(i, X) ((&zmw.ptr->u.children[i])->required.width = (X))
#define zmw_required_height_get() (zmw.ptr->u.size->required.height)
#define zmw_required_height_get_ptr() (&zmw.ptr->u.size->required.height)
#define zmw_required_height_set(X) (zmw.ptr->u.size->required.height = (X))
#define zmw_parent__required_height_get() ((zmw.ptr-1)->u.size->required.height)
#define zmw_parent__required_height_get_ptr() (&(zmw.ptr-1)->u.size->required.height)
#define zmw_parent__required_height_set(X) ((zmw.ptr-1)->u.size->required.height = (X))
#define zmw_child__required_height_get(i) ((&zmw.ptr->u.children[i])->required.height)
#define zmw_child__required_height_get_ptr(i) (&(&zmw.ptr->u.children[i])->required.height)
#define zmw_child__required_height_set(i, X) ((&zmw.ptr->u.children[i])->required.height = (X))
#define zmw_required_get() (&zmw.ptr->u.size->required)
#define zmw_required_set(X) (zmw.ptr->u.size->required = *(X))
#define zmw_parent__required_get() (&(zmw.ptr-1)->u.size->required)
#define zmw_parent__required_set(X) ((zmw.ptr-1)->u.size->required = *(X))
#define zmw_child__required_get(i) (&(&zmw.ptr->u.children[i])->required)
#define zmw_child__required_set(i, X) ((&zmw.ptr->u.children[i])->required = *(X))
#define zmw_min_x_get() (zmw.ptr->u.size->min.x)
#define zmw_min_x_get_ptr() (&zmw.ptr->u.size->min.x)
#define zmw_min_x_set(X) (zmw.ptr->u.size->min.x = (X))
#define zmw_parent__min_x_get() ((zmw.ptr-1)->u.size->min.x)
#define zmw_parent__min_x_get_ptr() (&(zmw.ptr-1)->u.size->min.x)
#define zmw_parent__min_x_set(X) ((zmw.ptr-1)->u.size->min.x = (X))
#define zmw_child__min_x_get(i) ((&zmw.ptr->u.children[i])->min.x)
#define zmw_child__min_x_get_ptr(i) (&(&zmw.ptr->u.children[i])->min.x)
#define zmw_child__min_x_set(i, X) ((&zmw.ptr->u.children[i])->min.x = (X))
#define zmw_min_y_get() (zmw.ptr->u.size->min.y)
#define zmw_min_y_get_ptr() (&zmw.ptr->u.size->min.y)
#define zmw_min_y_set(X) (zmw.ptr->u.size->min.y = (X))
#define zmw_parent__min_y_get() ((zmw.ptr-1)->u.size->min.y)
#define zmw_parent__min_y_get_ptr() (&(zmw.ptr-1)->u.size->min.y)
#define zmw_parent__min_y_set(X) ((zmw.ptr-1)->u.size->min.y = (X))
#define zmw_child__min_y_get(i) ((&zmw.ptr->u.children[i])->min.y)
#define zmw_child__min_y_get_ptr(i) (&(&zmw.ptr->u.children[i])->min.y)
#define zmw_child__min_y_set(i, X) ((&zmw.ptr->u.children[i])->min.y = (X))
#define zmw_min_width_get() (zmw.ptr->u.size->min.width)
#define zmw_min_width_get_ptr() (&zmw.ptr->u.size->min.width)
#define zmw_min_width_set(X) (zmw.ptr->u.size->min.width = (X))
#define zmw_parent__min_width_get() ((zmw.ptr-1)->u.size->min.width)
#define zmw_parent__min_width_get_ptr() (&(zmw.ptr-1)->u.size->min.width)
#define zmw_parent__min_width_set(X) ((zmw.ptr-1)->u.size->min.width = (X))
#define zmw_child__min_width_get(i) ((&zmw.ptr->u.children[i])->min.width)
#define zmw_child__min_width_get_ptr(i) (&(&zmw.ptr->u.children[i])->min.width)
#define zmw_child__min_width_set(i, X) ((&zmw.ptr->u.children[i])->min.width = (X))
#define zmw_min_height_get() (zmw.ptr->u.size->min.height)
#define zmw_min_height_get_ptr() (&zmw.ptr->u.size->min.height)
#define zmw_min_height_set(X) (zmw.ptr->u.size->min.height = (X))
#define zmw_parent__min_height_get() ((zmw.ptr-1)->u.size->min.height)
#define zmw_parent__min_height_get_ptr() (&(zmw.ptr-1)->u.size->min.height)
#define zmw_parent__min_height_set(X) ((zmw.ptr-1)->u.size->min.height = (X))
#define zmw_child__min_height_get(i) ((&zmw.ptr->u.children[i])->min.height)
#define zmw_child__min_height_get_ptr(i) (&(&zmw.ptr->u.children[i])->min.height)
#define zmw_child__min_height_set(i, X) ((&zmw.ptr->u.children[i])->min.height = (X))
#define zmw_min_get() (&zmw.ptr->u.size->min)
#define zmw_min_set(X) (zmw.ptr->u.size->min = *(X))
#define zmw_parent__min_get() (&(zmw.ptr-1)->u.size->min)
#define zmw_parent__min_set(X) ((zmw.ptr-1)->u.size->min = *(X))
#define zmw_child__min_get(i) (&(&zmw.ptr->u.children[i])->min)
#define zmw_child__min_set(i, X) ((&zmw.ptr->u.children[i])->min = *(X))
#define zmw_focused_get() (zmw.ptr->u.size->focused)
#define zmw_focused_set(X) (zmw.ptr->u.size->focused = (X))
#define zmw_parent__focused_get() ((zmw.ptr-1)->u.size->focused)
#define zmw_parent__focused_set(X) ((zmw.ptr-1)->u.size->focused = (X))
#define zmw_child__focused_get(i) ((&zmw.ptr->u.children[i])->focused)
#define zmw_child__focused_set(i, X) ((&zmw.ptr->u.children[i])->focused = (X))
#define zmw_activated_get() (zmw.ptr->u.size->activated)
#define zmw_activated_set(X) (zmw.ptr->u.size->activated = (X))
#define zmw_parent__activated_get() ((zmw.ptr-1)->u.size->activated)
#define zmw_parent__activated_set(X) ((zmw.ptr-1)->u.size->activated = (X))
#define zmw_child__activated_get(i) ((&zmw.ptr->u.children[i])->activated)
#define zmw_child__activated_set(i, X) ((&zmw.ptr->u.children[i])->activated = (X))
#define zmw_children_activated_get() (zmw.ptr->u.size->children_activated)
#define zmw_children_activated_set(X) (zmw.ptr->u.size->children_activated = (X))
#define zmw_parent__children_activated_get() ((zmw.ptr-1)->u.size->children_activated)
#define zmw_parent__children_activated_set(X) ((zmw.ptr-1)->u.size->children_activated = (X))
#define zmw_child__children_activated_get(i) ((&zmw.ptr->u.children[i])->children_activated)
#define zmw_child__children_activated_set(i, X) ((&zmw.ptr->u.children[i])->children_activated = (X))
#define zmw_changed_get() (zmw.ptr->u.size->changed)
#define zmw_changed_set(X) (zmw.ptr->u.size->changed = (X))
#define zmw_parent__changed_get() ((zmw.ptr-1)->u.size->changed)
#define zmw_parent__changed_set(X) ((zmw.ptr-1)->u.size->changed = (X))
#define zmw_child__changed_get(i) ((&zmw.ptr->u.children[i])->changed)
#define zmw_child__changed_set(i, X) ((&zmw.ptr->u.children[i])->changed = (X))
#define zmw_tip_visible_get() (zmw.ptr->u.size->tip_visible)
#define zmw_tip_visible_set(X) (zmw.ptr->u.size->tip_visible = (X))
#define zmw_parent__tip_visible_get() ((zmw.ptr-1)->u.size->tip_visible)
#define zmw_parent__tip_visible_set(X) ((zmw.ptr-1)->u.size->tip_visible = (X))
#define zmw_child__tip_visible_get(i) ((&zmw.ptr->u.children[i])->tip_visible)
#define zmw_child__tip_visible_set(i, X) ((&zmw.ptr->u.children[i])->tip_visible = (X))
#define zmw_hash_key_get() (zmw.ptr->u.size->hash_key)
#define zmw_hash_key_get_ptr() (&zmw.ptr->u.size->hash_key)
#define zmw_hash_key_set(X) (zmw.ptr->u.size->hash_key = (X))
#define zmw_parent__hash_key_get() ((zmw.ptr-1)->u.size->hash_key)
#define zmw_parent__hash_key_get_ptr() (&(zmw.ptr-1)->u.size->hash_key)
#define zmw_parent__hash_key_set(X) ((zmw.ptr-1)->u.size->hash_key = (X))
#define zmw_child__hash_key_get(i) ((&zmw.ptr->u.children[i])->hash_key)
#define zmw_child__hash_key_get_ptr(i) (&(&zmw.ptr->u.children[i])->hash_key)
#define zmw_child__hash_key_set(i, X) ((&zmw.ptr->u.children[i])->hash_key = (X))
#define zmw_do_not_map_window_get() (zmw.ptr->u.size->do_not_map_window)
#define zmw_do_not_map_window_set(X) (zmw.ptr->u.size->do_not_map_window = (X))
#define zmw_parent__do_not_map_window_get() ((zmw.ptr-1)->u.size->do_not_map_window)
#define zmw_parent__do_not_map_window_set(X) ((zmw.ptr-1)->u.size->do_not_map_window = (X))
#define zmw_child__do_not_map_window_get(i) ((&zmw.ptr->u.children[i])->do_not_map_window)
#define zmw_child__do_not_map_window_set(i, X) ((&zmw.ptr->u.children[i])->do_not_map_window = (X))
#define zmw_used_by_parent_get() (zmw.ptr->u.size->used_by_parent)
#define zmw_used_by_parent_set(X) (zmw.ptr->u.size->used_by_parent = (X))
#define zmw_parent__used_by_parent_get() ((zmw.ptr-1)->u.size->used_by_parent)
#define zmw_parent__used_by_parent_set(X) ((zmw.ptr-1)->u.size->used_by_parent = (X))
#define zmw_child__used_by_parent_get(i) ((&zmw.ptr->u.children[i])->used_by_parent)
#define zmw_child__used_by_parent_set(i, X) ((&zmw.ptr->u.children[i])->used_by_parent = (X))
#define zmw_horizontaly_expanded_get() (zmw.ptr->u.size->horizontaly_expanded)
#define zmw_horizontaly_expanded_set(X) (zmw.ptr->u.size->horizontaly_expanded = (X))
#define zmw_parent__horizontaly_expanded_get() ((zmw.ptr-1)->u.size->horizontaly_expanded)
#define zmw_parent__horizontaly_expanded_set(X) ((zmw.ptr-1)->u.size->horizontaly_expanded = (X))
#define zmw_child__horizontaly_expanded_get(i) ((&zmw.ptr->u.children[i])->horizontaly_expanded)
#define zmw_child__horizontaly_expanded_set(i, X) ((&zmw.ptr->u.children[i])->horizontaly_expanded = (X))
#define zmw_verticaly_expanded_get() (zmw.ptr->u.size->verticaly_expanded)
#define zmw_verticaly_expanded_set(X) (zmw.ptr->u.size->verticaly_expanded = (X))
#define zmw_parent__verticaly_expanded_get() ((zmw.ptr-1)->u.size->verticaly_expanded)
#define zmw_parent__verticaly_expanded_set(X) ((zmw.ptr-1)->u.size->verticaly_expanded = (X))
#define zmw_child__verticaly_expanded_get(i) ((&zmw.ptr->u.children[i])->verticaly_expanded)
#define zmw_child__verticaly_expanded_set(i, X) ((&zmw.ptr->u.children[i])->verticaly_expanded = (X))
#define zmw_horizontal_expand_get() (zmw.ptr->u.size->current_state.horizontal_expand)
#define zmw_horizontal_expand_set(X) (zmw.ptr->u.size->current_state.horizontal_expand = (X))
#define zmw_parent__horizontal_expand_get() ((zmw.ptr-1)->u.size->current_state.horizontal_expand)
#define zmw_parent__horizontal_expand_set(X) ((zmw.ptr-1)->u.size->current_state.horizontal_expand = (X))
#define zmw_child__horizontal_expand_get(i) ((&zmw.ptr->u.children[i])->current_state.horizontal_expand)
#define zmw_child__horizontal_expand_set(i, X) ((&zmw.ptr->u.children[i])->current_state.horizontal_expand = (X))
#define zmw_vertical_expand_get() (zmw.ptr->u.size->current_state.vertical_expand)
#define zmw_vertical_expand_set(X) (zmw.ptr->u.size->current_state.vertical_expand = (X))
#define zmw_parent__vertical_expand_get() ((zmw.ptr-1)->u.size->current_state.vertical_expand)
#define zmw_parent__vertical_expand_set(X) ((zmw.ptr-1)->u.size->current_state.vertical_expand = (X))
#define zmw_child__vertical_expand_get(i) ((&zmw.ptr->u.children[i])->current_state.vertical_expand)
#define zmw_child__vertical_expand_set(i, X) ((&zmw.ptr->u.children[i])->current_state.vertical_expand = (X))
#define zmw_padding_width_get() (zmw.ptr->u.size->current_state.padding_width)
#define zmw_padding_width_get_ptr() (&zmw.ptr->u.size->current_state.padding_width)
#define zmw_padding_width_set(X) (zmw.ptr->u.size->current_state.padding_width = (X))
#define zmw_parent__padding_width_get() ((zmw.ptr-1)->u.size->current_state.padding_width)
#define zmw_parent__padding_width_get_ptr() (&(zmw.ptr-1)->u.size->current_state.padding_width)
#define zmw_parent__padding_width_set(X) ((zmw.ptr-1)->u.size->current_state.padding_width = (X))
#define zmw_child__padding_width_get(i) ((&zmw.ptr->u.children[i])->current_state.padding_width)
#define zmw_child__padding_width_get_ptr(i) (&(&zmw.ptr->u.children[i])->current_state.padding_width)
#define zmw_child__padding_width_set(i, X) ((&zmw.ptr->u.children[i])->current_state.padding_width = (X))
#define zmw_horizontal_alignment_get() (zmw.ptr->u.size->current_state.horizontal_alignment)
#define zmw_horizontal_alignment_get_ptr() (&zmw.ptr->u.size->current_state.horizontal_alignment)
#define zmw_horizontal_alignment_set(X) (zmw.ptr->u.size->current_state.horizontal_alignment = (X))
#define zmw_parent__horizontal_alignment_get() ((zmw.ptr-1)->u.size->current_state.horizontal_alignment)
#define zmw_parent__horizontal_alignment_get_ptr() (&(zmw.ptr-1)->u.size->current_state.horizontal_alignment)
#define zmw_parent__horizontal_alignment_set(X) ((zmw.ptr-1)->u.size->current_state.horizontal_alignment = (X))
#define zmw_child__horizontal_alignment_get(i) ((&zmw.ptr->u.children[i])->current_state.horizontal_alignment)
#define zmw_child__horizontal_alignment_get_ptr(i) (&(&zmw.ptr->u.children[i])->current_state.horizontal_alignment)
#define zmw_child__horizontal_alignment_set(i, X) ((&zmw.ptr->u.children[i])->current_state.horizontal_alignment = (X))
#define zmw_vertical_alignment_get() (zmw.ptr->u.size->current_state.vertical_alignment)
#define zmw_vertical_alignment_get_ptr() (&zmw.ptr->u.size->current_state.vertical_alignment)
#define zmw_vertical_alignment_set(X) (zmw.ptr->u.size->current_state.vertical_alignment = (X))
#define zmw_parent__vertical_alignment_get() ((zmw.ptr-1)->u.size->current_state.vertical_alignment)
#define zmw_parent__vertical_alignment_get_ptr() (&(zmw.ptr-1)->u.size->current_state.vertical_alignment)
#define zmw_parent__vertical_alignment_set(X) ((zmw.ptr-1)->u.size->current_state.vertical_alignment = (X))
#define zmw_child__vertical_alignment_get(i) ((&zmw.ptr->u.children[i])->current_state.vertical_alignment)
#define zmw_child__vertical_alignment_get_ptr(i) (&(&zmw.ptr->u.children[i])->current_state.vertical_alignment)
#define zmw_child__vertical_alignment_set(i, X) ((&zmw.ptr->u.children[i])->current_state.vertical_alignment = (X))
#define zmw_current_state_get() (&zmw.ptr->u.size->current_state)
#define zmw_current_state_set(X) (zmw.ptr->u.size->current_state = *(X))
#define zmw_parent__current_state_get() (&(zmw.ptr-1)->u.size->current_state)
#define zmw_parent__current_state_set(X) ((zmw.ptr-1)->u.size->current_state = *(X))
#define zmw_child__current_state_get(i) (&(&zmw.ptr->u.children[i])->current_state)
#define zmw_child__current_state_set(i, X) ((&zmw.ptr->u.children[i])->current_state = *(X))
#define zmw_cs_horizontal_expand_get() (zmw.ptr->u.size[1].current_state.horizontal_expand)
#define zmw_cs_horizontal_expand_set(X) (zmw.ptr->u.size[1].current_state.horizontal_expand = (X))
#define zmw_parent__cs_horizontal_expand_get() ((zmw.ptr-1)->u.size[1].current_state.horizontal_expand)
#define zmw_parent__cs_horizontal_expand_set(X) ((zmw.ptr-1)->u.size[1].current_state.horizontal_expand = (X))
#define zmw_child__cs_horizontal_expand_get(i) ((&zmw.ptr->u.children[i])[1].current_state.horizontal_expand)
#define zmw_child__cs_horizontal_expand_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state.horizontal_expand = (X))
#define zmw_cs_vertical_expand_get() (zmw.ptr->u.size[1].current_state.vertical_expand)
#define zmw_cs_vertical_expand_set(X) (zmw.ptr->u.size[1].current_state.vertical_expand = (X))
#define zmw_parent__cs_vertical_expand_get() ((zmw.ptr-1)->u.size[1].current_state.vertical_expand)
#define zmw_parent__cs_vertical_expand_set(X) ((zmw.ptr-1)->u.size[1].current_state.vertical_expand = (X))
#define zmw_child__cs_vertical_expand_get(i) ((&zmw.ptr->u.children[i])[1].current_state.vertical_expand)
#define zmw_child__cs_vertical_expand_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state.vertical_expand = (X))
#define zmw_cs_padding_width_get() (zmw.ptr->u.size[1].current_state.padding_width)
#define zmw_cs_padding_width_get_ptr() (&zmw.ptr->u.size[1].current_state.padding_width)
#define zmw_cs_padding_width_set(X) (zmw.ptr->u.size[1].current_state.padding_width = (X))
#define zmw_parent__cs_padding_width_get() ((zmw.ptr-1)->u.size[1].current_state.padding_width)
#define zmw_parent__cs_padding_width_get_ptr() (&(zmw.ptr-1)->u.size[1].current_state.padding_width)
#define zmw_parent__cs_padding_width_set(X) ((zmw.ptr-1)->u.size[1].current_state.padding_width = (X))
#define zmw_child__cs_padding_width_get(i) ((&zmw.ptr->u.children[i])[1].current_state.padding_width)
#define zmw_child__cs_padding_width_get_ptr(i) (&(&zmw.ptr->u.children[i])[1].current_state.padding_width)
#define zmw_child__cs_padding_width_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state.padding_width = (X))
#define zmw_cs_horizontal_alignment_get() (zmw.ptr->u.size[1].current_state.horizontal_alignment)
#define zmw_cs_horizontal_alignment_get_ptr() (&zmw.ptr->u.size[1].current_state.horizontal_alignment)
#define zmw_cs_horizontal_alignment_set(X) (zmw.ptr->u.size[1].current_state.horizontal_alignment = (X))
#define zmw_parent__cs_horizontal_alignment_get() ((zmw.ptr-1)->u.size[1].current_state.horizontal_alignment)
#define zmw_parent__cs_horizontal_alignment_get_ptr() (&(zmw.ptr-1)->u.size[1].current_state.horizontal_alignment)
#define zmw_parent__cs_horizontal_alignment_set(X) ((zmw.ptr-1)->u.size[1].current_state.horizontal_alignment = (X))
#define zmw_child__cs_horizontal_alignment_get(i) ((&zmw.ptr->u.children[i])[1].current_state.horizontal_alignment)
#define zmw_child__cs_horizontal_alignment_get_ptr(i) (&(&zmw.ptr->u.children[i])[1].current_state.horizontal_alignment)
#define zmw_child__cs_horizontal_alignment_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state.horizontal_alignment = (X))
#define zmw_cs_vertical_alignment_get() (zmw.ptr->u.size[1].current_state.vertical_alignment)
#define zmw_cs_vertical_alignment_get_ptr() (&zmw.ptr->u.size[1].current_state.vertical_alignment)
#define zmw_cs_vertical_alignment_set(X) (zmw.ptr->u.size[1].current_state.vertical_alignment = (X))
#define zmw_parent__cs_vertical_alignment_get() ((zmw.ptr-1)->u.size[1].current_state.vertical_alignment)
#define zmw_parent__cs_vertical_alignment_get_ptr() (&(zmw.ptr-1)->u.size[1].current_state.vertical_alignment)
#define zmw_parent__cs_vertical_alignment_set(X) ((zmw.ptr-1)->u.size[1].current_state.vertical_alignment = (X))
#define zmw_child__cs_vertical_alignment_get(i) ((&zmw.ptr->u.children[i])[1].current_state.vertical_alignment)
#define zmw_child__cs_vertical_alignment_get_ptr(i) (&(&zmw.ptr->u.children[i])[1].current_state.vertical_alignment)
#define zmw_child__cs_vertical_alignment_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state.vertical_alignment = (X))
#define zmw_cs_current_state_get() (&zmw.ptr->u.size[1].current_state)
#define zmw_cs_current_state_set(X) (zmw.ptr->u.size[1].current_state = *(X))
#define zmw_parent__cs_current_state_get() (&(zmw.ptr-1)->u.size[1].current_state)
#define zmw_parent__cs_current_state_set(X) ((zmw.ptr-1)->u.size[1].current_state = *(X))
#define zmw_child__cs_current_state_get(i) (&(&zmw.ptr->u.children[i])[1].current_state)
#define zmw_child__cs_current_state_set(i, X) ((&zmw.ptr->u.children[i])[1].current_state = *(X))
#define zmw_state_get() (zmw.ptr)
#define zmw_state_get_ptr() (&zmw.ptr)
#define zmw_state_set(X) (zmw.ptr = (X))
#define zmw_zmw_full_name_get() (zmw.full_name)
#define zmw_zmw_table_get() (zmw.table)
#define zmw_zmw_table_get_ptr() (&zmw.table)
#define zmw_zmw_table_set(X) (zmw.table = (X))
#if ZMW_DEBUG_INSIDE_ZMW_PARAMETER
#define zmw_zmw_inside_zmw_parameter_get() (zmw.inside_zmw_parameter)
#else
#endif
#if ZMW_DEBUG_INSIDE_ZMW_PARAMETER
#define zmw_zmw_inside_zmw_parameter_set(X) (zmw.inside_zmw_parameter = (X))
#else
#endif
#if ZMW_PROFILING
#define zmw_zmw_profiling_displayed_get() (zmw.profiling_displayed)
#else
#endif
#if ZMW_PROFILING
#define zmw_zmw_profiling_displayed_set(X) (zmw.profiling_displayed = (X))
#else
#endif
#define zmw_zmw_event_get() (zmw.event)
#define zmw_zmw_event_get_ptr() (&zmw.event)
#define zmw_zmw_event_set(X) (zmw.event = (X))
#define zmw_zmw_x_get() (zmw.x)
#define zmw_zmw_x_get_ptr() (&zmw.x)
#define zmw_zmw_x_set(X) (zmw.x = (X))
#define zmw_zmw_y_get() (zmw.y)
#define zmw_zmw_y_get_ptr() (&zmw.y)
#define zmw_zmw_y_set(X) (zmw.y = (X))
#define zmw_zmw_x_root_get() (zmw.x_root)
#define zmw_zmw_x_root_get_ptr() (&zmw.x_root)
#define zmw_zmw_x_root_set(X) (zmw.x_root = (X))
#define zmw_zmw_y_root_get() (zmw.y_root)
#define zmw_zmw_y_root_get_ptr() (&zmw.y_root)
#define zmw_zmw_y_root_set(X) (zmw.y_root = (X))
#define zmw_zmw_found_get() (&zmw.found)
#define zmw_zmw_found_set(X) (zmw.found = *(X))
#define zmw_zmw_widget_to_trace_get() (&zmw.widget_to_trace)
#define zmw_zmw_widget_to_trace_set(X) (zmw.widget_to_trace = *(X))
#define zmw_zmw_windows_get() (zmw.windows)
#define zmw_zmw_windows_get_ptr() (&zmw.windows)
#define zmw_zmw_windows_set(X) (zmw.windows = (X))
#define zmw_zmw_nb_windows_get() (zmw.nb_windows)
#define zmw_zmw_nb_windows_get_ptr() (&zmw.nb_windows)
#define zmw_zmw_nb_windows_set(X) (zmw.nb_windows = (X))
#define zmw_zmw_window_get() (zmw.window)
#define zmw_zmw_window_get_ptr() (&zmw.window)
#define zmw_zmw_window_set(X) (zmw.window = (X))
#define zmw_zmw_raised_get() (zmw.raised)
#define zmw_zmw_raised_get_ptr() (&zmw.raised)
#define zmw_zmw_raised_set(X) (zmw.raised = (X))
#define zmw_zmw_event_removed_get() (zmw.event_removed)
#define zmw_zmw_event_removed_set(X) (zmw.event_removed = (X))
#define zmw_zmw_focus_with_cursor_value_get() (zmw.focus_with_cursor->value)
#define zmw_zmw_focus_with_cursor_value_get_ptr() (&zmw.focus_with_cursor->value)
#define zmw_zmw_focus_with_cursor_value_set(X) (zmw.focus_with_cursor->value = (X))
#define zmw_zmw_focus_with_cursor_get() (zmw.focus_with_cursor)
#define zmw_zmw_focus_with_cursor_get_ptr() (&zmw.focus_with_cursor)
#define zmw_zmw_focus_with_cursor_set(X) (zmw.focus_with_cursor = (X))
#define zmw_zmw_focused_x_get() (zmw.focused.x)
#define zmw_zmw_focused_x_get_ptr() (&zmw.focused.x)
#define zmw_zmw_focused_x_set(X) (zmw.focused.x = (X))
#define zmw_zmw_focused_y_get() (zmw.focused.y)
#define zmw_zmw_focused_y_get_ptr() (&zmw.focused.y)
#define zmw_zmw_focused_y_set(X) (zmw.focused.y = (X))
#define zmw_zmw_focused_width_get() (zmw.focused.width)
#define zmw_zmw_focused_width_get_ptr() (&zmw.focused.width)
#define zmw_zmw_focused_width_set(X) (zmw.focused.width = (X))
#define zmw_zmw_focused_height_get() (zmw.focused.height)
#define zmw_zmw_focused_height_get_ptr() (&zmw.focused.height)
#define zmw_zmw_focused_height_set(X) (zmw.focused.height = (X))
#define zmw_zmw_focused_get() (&zmw.focused)
#define zmw_zmw_focused_set(X) (zmw.focused = *(X))
#define zmw_zmw_still_yet_displayed_get() (zmw.still_yet_displayed)
#define zmw_zmw_still_yet_displayed_set(X) (zmw.still_yet_displayed = (X))
#define zmw_zmw_button_pressed_get() (zmw.button_pressed)
#define zmw_zmw_button_pressed_set(X) (zmw.button_pressed = (X))
#define zmw_zmw_key_pressed_get() (zmw.key_pressed)
#define zmw_zmw_key_pressed_set(X) (zmw.key_pressed = (X))
#define zmw_zmw_tip_displayed_get() (&zmw.tip_displayed)
#define zmw_zmw_tip_displayed_set(X) (zmw.tip_displayed = *(X))
#define zmw_zmw_tips_yet_displayed_get() (zmw.tips_yet_displayed)
#define zmw_zmw_tips_yet_displayed_set(X) (zmw.tips_yet_displayed = (X))
#define zmw_zmw_external_do_not_make_init_get() (zmw.external_do_not_make_init)
#define zmw_zmw_external_do_not_make_init_set(X) (zmw.external_do_not_make_init = (X))
